{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "EnvironmentName": {
      "Description": "The string that will be prefixed to each instance name",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "10",
      "Default": "simData",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "Environment names must be 3-6 characters and contain only a-z and 0-9."
    },
    "ProcessKinesisFunctionKey": {
      "Type": "String",
      "Default": "processKinesis.zip",
      "Description": "Lambda function used to process kinesis stream data"
    },
    "lambdabucket": {
      "Type": "String",
      "Default": "reinvent-abd322-workshop",
      "Description": "Lambda function bucket"
    },
     "KinesisStreamARN": {
      "Type": "String",
      "Default": "<KINESIS_STREAM_ARN>",
      "Description": "ARN of the Kinesis stream"
    }
  },
  "Resources": {
    "ProcessKinesisFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Tags": [
          {
            "Key": "Environment",
            "Value": {
              "Ref": "EnvironmentName"
            }
          },
          {
            "Key": "Name",
            "Value": {
              "Ref": "EnvironmentName"
            }
          }
        ],
        "Handler": "handler.index",
        "Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
        "Code": {
          "S3Bucket": {
            "Ref": "lambdabucket"
          },
          "S3Key": {
            "Ref": "ProcessKinesisFunctionKey"
          }
        },
        "Environment": {},
        "Runtime": "nodejs6.10",
        "Timeout": "120",
        "MemorySize": "1024"
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ProcessKinesisFunction",
            "Arn"
          ]
        },
        "Principal": "kinesis.amazonaws.com",
        "SourceArn": {
          "Ref":"KinesisStreamARN"
        }
      }
    },
     "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{ "Effect": "Allow", "Principal": {"Service": ["lambda.amazonaws.com"]}, "Action": ["sts:AssumeRole"] }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "AllowSimLambda",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                { "Effect": "Allow", "Action": ["logs:*"], "Resource": "arn:aws:logs:*:*:*" },
                { "Effect": "Allow", "Action": ["kinesis:*"], "Resource": "*" },
                { "Effect": "Allow", "Action": ["dynamodb:PutItem"], "Resource": "*" },
                { "Effect": "Allow", "Action": ["firehose:PutRecord"], "Resource": "*" }
                ]
          }
        }]
      }
    },
    "DDBTable": {
        "Type": "AWS::DynamoDB::Table",
        "Properties": {
        "TableName": "simDataStore",
        "AttributeDefinitions": [
            {
            "AttributeName": "id",
            "AttributeType": "S"
            }
        ],
        "KeySchema": [
            {
            "AttributeName": "id",
            "KeyType": "HASH"
            }
        ],
        "ProvisionedThroughput": {
            "ReadCapacityUnits": 5,
            "WriteCapacityUnits": 50
            }

        }
    }
  },
  "Outputs": {
    "ProcessKinesisFunctionARN": {
      "Value": {
        "Fn::GetAtt": [
          "ProcessKinesisFunction",
          "Arn"
        ]
      },
      "Description": "Lambda function used by API gateway to get a certification ARN",
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-ProcessKinesisFunctionARN"
        }
      }
    },
    "DDBTable": {
        "Value": { "Ref": "DDBTable"},
        "Description": "DDB Table for flight stats"
    }
  }
}